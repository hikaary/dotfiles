diff --git a/darwin/configuration.nix b/darwin/configuration.nix
index f0007ee..c6b8d71 100644
--- a/darwin/configuration.nix
+++ b/darwin/configuration.nix
@@ -5,18 +5,24 @@
   };
 
   nix.enable = false;
-  # nix.settings = { experimental-features = "nix-command flakes"; };
-  # nix.optimise.automatic = true;
 
   users.users."${user}" = {
     name = "${user}";
     home = "/Users/${user}";
-    shell = pkgs.nushell;
   };
 
   environment = {
     shells = with pkgs; [ bash zsh nushell ];
-    systemPackages = [ pkgs.coreutils ];
+    systemPackages = [
+      pkgs.coreutils
+      pkgs.neovim
+      pkgs.eza
+      pkgs.bat
+      pkgs.yazi
+      pkgs.atuin
+      pkgs.python3
+      pkgs.kanata
+    ];
     systemPath = [
       "/usr/local/bin"
       "/opt/homebrew/bin"
@@ -27,9 +33,18 @@
     pathsToLink = [ "/Applications" ];
   };
 
+  programs.direnv = {
+    enable = true;
+    direnvrcExtra = ''
+      echo "Loaded direnv "
+    '';
+    silent = true;
+
+  };
+
   system = {
     keyboard.enableKeyMapping = true;
-    keyboard.remapCapsLockToEscape = true;
+    keyboard.swapLeftCtrlAndFn = true;
 
     startup.chime = true;
 
@@ -40,6 +55,8 @@
 
       # hide icons on desktop
       defaults write com.apple.finder CreateDesktop FALSE; killall Finder
+      defaults write com.apple.spaces spans-displays -bool true && killall SystemUIServer
+      defaults write com.apple.spaces spans-displays -bool true && killall SystemUIServer
     '';
 
     defaults = {
diff --git a/darwin/karabiner.edn b/darwin/karabiner.edn
index 7c8811f..85d56e1 100644
--- a/darwin/karabiner.edn
+++ b/darwin/karabiner.edn
@@ -5,10 +5,6 @@
    }
  }
 
- :templates {
-   :open-ghost "open -n -a \"%s\""
- }
-
  :simlayers {
    :space-layer {:key :spacebar :alone 250}
  }
@@ -29,11 +25,6 @@
       [:l :right_arrow]
     ]
    }
-   {:des "Launch Ghostty with Alt+Enter"
-    :rules [
-      [:!Oreturn_or_enter [:open-ghost "Ghostty"]]
-    ]
-   }
  ]
 }
 
diff --git a/darwin/modules/aerospace.nix b/darwin/modules/aerospace.nix
index 731ebff..6025b44 100644
--- a/darwin/modules/aerospace.nix
+++ b/darwin/modules/aerospace.nix
@@ -1,6 +1,6 @@
 { pkgs, ... }: {
   services.aerospace = {
-    enable = false;
+    enable = true;
     package = pkgs.aerospace;
 
     settings = {
@@ -19,18 +19,12 @@
 
       accordion-padding = 14;
 
-      default-root-container-layout = "tiles";
+      default-root-container-layout = "tiles"; # bsp-подобная раскладка
       default-root-container-orientation = "horizontal";
 
-      exec-on-workspace-change = [
-        "/bin/zsh"
-        "-c"
-        "${pkgs.sketchybar}/bin/sketchybar --trigger aerospace_workspace_changed FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE"
-      ];
+      exec-on-workspace-change = [ ];
 
-      on-focus-changed = [
-        "exec-and-forget ${pkgs.sketchybar}/bin/sketchybar --trigger front_app_switched"
-      ];
+      on-focus-changed = [ "move-mouse window-lazy-center" ];
 
       gaps = {
         outer = {
@@ -40,13 +34,18 @@
           top = 20;
         };
         inner = {
-          horizontal = 25;
-          vertical = 25;
+          horizontal = 12;
+          vertical = 12;
         };
       };
 
       on-window-detected = [
-        ####### Floating Windows #######
+        ####### Floating Windows (manage=off) #######
+        {
+          check-further-callbacks = false;
+          "if" = { app-id = "System Settings"; };
+          run = [ "layout floating" ];
+        }
         {
           check-further-callbacks = false;
           "if" = { app-id = "com.apple.finder"; };
@@ -54,31 +53,74 @@
         }
         {
           check-further-callbacks = false;
-          "if" = { app-id = "hossin.asaadi.V2Box"; };
+          "if" = { app-id = "Orion"; };
           run = [ "layout floating" ];
         }
         {
           check-further-callbacks = false;
-          "if" = { app-id = "com.cisco.secureclient.gui"; };
+          "if" = { app-id = "Arc"; };
+          run = [ "layout floating" ];
+        }
+        {
+          check-further-callbacks = false;
+          "if" = { app-id = "System Preferences"; };
+          run = [ "layout floating" ];
+        }
+        {
+          check-further-callbacks = false;
+          "if" = { app-id = "App Store"; };
+          run = [ "layout floating" ];
+        }
+        {
+          check-further-callbacks = false;
+          "if" = { app-id = "Activity Monitor"; };
+          run = [ "layout floating" ];
+        }
+        {
+          check-further-callbacks = false;
+          "if" = { app-id = "KeePassXC"; };
+          run = [ "layout floating" ];
+        }
+        {
+          check-further-callbacks = false;
+          "if" = { app-id = "Calculator"; };
+          run = [ "layout floating" ];
+        }
+        {
+          check-further-callbacks = false;
+          "if" = { app-id = "Dictionary"; };
+          run = [ "layout floating" ];
+        }
+        {
+          check-further-callbacks = false;
+          "if" = { app-id = "mpv"; };
           run = [ "layout floating" ];
         }
         {
           check-further-callbacks = false;
-          "if" = { app-id = "com.apple.systempreferences"; };
-          run = [ "layout tiling" ];
+          "if" = { window-title-regex-substring = "Software Update"; };
+          run = [ "layout floating" ];
         }
         {
           check-further-callbacks = false;
-          "if" = { app-id = "org.pqrs.Karabiner-Elements.Settings"; };
+          "if" = {
+            app-id = "System Information";
+            window-title-regex-substring = "About This Mac";
+          };
           run = [ "layout floating" ];
         }
+        {
+          check-further-callbacks = false;
+          "if" = { app-id = "com.cisco.secureclient.gui"; };
+          run = [ "layout floating" ];
+        }
+
         ####### Specific spaces for apps #######
         {
           check-further-callbacks = false;
           "if" = { app-id = "com.mitchellh.ghostty"; };
-          run = [ "move-node-to-workspace D" ];
+          run = [ "layout floating" "move-node-to-workspace D" ];
         }
-
         {
           check-further-callbacks = false;
           "if" = { app-id = "company.thebrowser.Browser"; };
@@ -104,13 +146,29 @@
           "if" = { app-id = "com.spotify.client"; };
           run = [ "move-node-to-workspace E" ];
         }
+        {
+          check-further-callbacks = false;
+          "if" = { app-id = "com.openai.chat"; };
+          run = [ "move-node-to-workspace V" ];
+        }
+        {
+          check-further-callbacks = false;
+          "if" = { app-id = "kontur.talk"; };
+          run = [ "move-node-to-workspace P" ];
+        }
       ];
 
-      mode.main.binding = {
-        cmd-alt-h = [ ];
-
-        alt-comma = "layout accordion horizontal vertical";
+      workspace-to-monitor-force-assignment = {
+        "B" = "main";
+        "E" = "main";
+        "M" = "main";
+        "D" = "main";
+        "V" = [ "secondary" "dell" ];
+        "P" = "main";
+        "O" = "main";
+      };
 
+      mode.main.binding = {
         alt-shift-minus = "resize smart -50";
         alt-shift-equal = "resize smart +50";
 
@@ -127,11 +185,6 @@
         alt-shift-k = "move up";
         alt-shift-l = "move right";
 
-        cmd-shift-h = "resize width -50";
-        cmd-shift-j = "resize height +50";
-        cmd-shift-k = "resize height -50";
-        cmd-shift-l = "resize width +50";
-
         alt-shift-0 = "balance-sizes";
 
         alt-b = "workspace B";
@@ -140,6 +193,7 @@
         alt-d = "workspace D";
         alt-v = "workspace V";
         alt-p = "workspace P";
+        alt-o = "workspace O";
 
         alt-shift-b = [
           "move-node-to-workspace B"
@@ -161,7 +215,6 @@
           "move-node-to-workspace V"
           "exec-and-forget ${pkgs.sketchybar}/bin/sketchybar --trigger space_windows_change"
         ];
-
         alt-shift-p = [
           "move-node-to-workspace P"
           "exec-and-forget ${pkgs.sketchybar}/bin/sketchybar --trigger space_windows_change"
@@ -194,4 +247,3 @@
     };
   };
 }
-
diff --git a/darwin/modules/borders.nix b/darwin/modules/borders.nix
index 61cb7e0..34c0215 100644
--- a/darwin/modules/borders.nix
+++ b/darwin/modules/borders.nix
@@ -1,12 +1,11 @@
 { pkgs, ... }: {
   services.jankyborders = {
-    enable = false;
+    enable = true;
     package = pkgs.jankyborders;
-
-    style = "round";
-    width = 3.0;
+    width = 5.0;
+    active_color = "gradient(top_left=0xffDDB6F2,bottom_right=0xff96CDFB)";
+    inactive_color = "gradient(top_right=0x9992B3F5,bottom_left=0x9992B3F5)";
     hidpi = true;
-    active_color = "0xffac8fd4";
-    inactive_color = "2a2a2e";
+    ax_focus = true;
   };
 }
diff --git a/darwin/modules/brew.nix b/darwin/modules/brew.nix
index 3693887..7a5e72e 100644
--- a/darwin/modules/brew.nix
+++ b/darwin/modules/brew.nix
@@ -15,10 +15,19 @@
       "ghostty"
       "hiddenbar"
       "drawio"
-      "dimentium/autoraise/autoraiseapp"
       "raycast"
-      "loop"
       "grishka/grishka/neardrop"
+      "orion"
+      "upscayl"
+      "outline"
+      "hyperkey"
+      "chatgpt"
+      "hammerspoon"
+      "lihaoyun6/tap/quickrecorder"
+      "betterdisplay"
+      "caffeine"
+      "pgadmin4"
+      "lm-studio"
     ];
     brews = [
       {
diff --git a/darwin/modules/default.nix b/darwin/modules/default.nix
index 4fd72a4..878be00 100644
--- a/darwin/modules/default.nix
+++ b/darwin/modules/default.nix
@@ -1 +1 @@
-{ ... }: { imports = [ ./brew.nix ./borders.nix ./aerospace.nix ]; }
+{ ... }: { imports = [ ./brew.nix ./borders.nix ./aerospace.nix ./yabai.nix ]; }
diff --git a/darwin/modules/yabai.nix b/darwin/modules/yabai.nix
new file mode 100644
index 0000000..0752059
--- /dev/null
+++ b/darwin/modules/yabai.nix
@@ -0,0 +1,78 @@
+{ ... }: {
+  services = {
+    yabai = {
+      enable = false;
+      enableScriptingAddition = false;
+      config = {
+        layout = "bsp";
+        window_gap = 12;
+        top_padding = 20;
+        bottom_padding = 20;
+        left_padding = 20;
+        right_padding = 20;
+        window_placement = "second_child";
+        focus_follows_mouse = "autofocus";
+        # focus_follows_mouse = "off";
+        mouse_follows_focus = "off";
+        mouse_modifier = "alt";
+        mouse_action1 = "move";
+        mouser_action2 = "resize";
+        mouse_drop_action = "swap";
+      };
+      extraConfig = ''
+        yabai -m rule --add app="^System Settings$" manage=off
+        yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
+        yabai -m rule --add label="Orion" app="^Orion$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
+        yabai -m rule --add label="Arc" app="^Arc$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
+        yabai -m rule --add label="System Preferences" app="^System Preferences$" title=".*" manage=off
+        yabai -m rule --add label="App Store" app="^App Store$" manage=off
+        yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off
+        yabai -m rule --add label="KeePassXC" app="^KeePassXC$" manage=off
+        yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
+        yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
+        yabai -m rule --add label="mpv" app="^mpv$" manage=off
+        yabai -m rule --add label="Software Update" title="Software Update" manage=off
+        yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off
+
+        yabai -m signal --add app='^Ghostty$' event=window_created   action='yabai -m space --layout bsp'
+        yabai -m signal --add app='^Ghostty$' event=window_destroyed action='yabai -m space --layout bsp'
+      '';
+    };
+
+    skhd = {
+      enable = false;
+      skhdConfig = ''
+        ################  ФОКУС ОКНА (hjkl)  ################
+        alt - h : yabai -m window --focus west  || yabai -m display --focus west
+        alt - j : yabai -m window --focus south || yabai -m display --focus south
+        alt - k : yabai -m window --focus north || yabai -m display --focus north
+        alt - l : yabai -m window --focus east  || yabai -m display --focus east
+
+        ################  SWAP ОКОН  ################
+        shift + alt - h : yabai -m window --swap west
+        shift + alt - j : yabai -m window --swap south
+        shift + alt - k : yabai -m window --swap north
+        shift + alt - l : yabai -m window --swap east
+
+        ################  RESIZE  (+/-20 px)  ################
+        ctrl + shift - left : yabai -m window --resize left:-20:0
+        ctrl + shift - right : yabai -m window --resize right:20:0
+        ctrl + shift - up : yabai -m window --resize top:0:-20
+        ctrl + shift - down : yabai -m window --resize bottom:0:20
+
+        ################  TOGGLE FLOAT  ################
+        alt - f : yabai -m window --toggle zoom-fullscreen
+
+        ################  ЗАПУСК GHOSTTY  ################
+        alt - return : open -na Ghostty
+
+        ctrl + alt - h : yabai -m window --display west  && yabai -m display --focus west
+        ctrl + alt - l : yabai -m window --display east  && yabai -m display --focus east
+
+        ################  Фокус  ################
+        cmd + shift - l : yabai -m display --focus next
+        cmd + shift - h : yabai -m display --focus prev
+      '';
+    };
+  };
+}
diff --git a/home-manager/configs/git/scripts/generate_commit_message.py b/home-manager/configs/git/scripts/generate_commit_message.py
deleted file mode 100755
index 5420514..0000000
--- a/home-manager/configs/git/scripts/generate_commit_message.py
+++ /dev/null
@@ -1,180 +0,0 @@
-#!/usr/bin/env python3
-
-import argparse
-import json
-import os
-import subprocess
-import sys
-import urllib.error
-import urllib.request
-from typing import Optional, Dict, Any
-
-COMMIT_MESSAGE_PROMPT = """
-Ты – эксперт по написанию сообщений коммитов на русском языке, строго следующий правилам Conventional Commits.
-Создать сообщение для коммита на русском языке на основе предоставленного diff.
-
-ВХОДНЫЕ ДАННЫЕ:
-diff:
-```
-{diff}
-```
-
-# ОБЩИЕ ТРЕБОВАНИЯ:
-*   Сообщение коммита должно быть полностью на русском языке.
-*   Сообщение состоит из двух обязательных частей: заголовок и детальное описание, разделенных пустой строкой.
-*   Строго придерживайся типов коммитов Conventional Commits.
-
-# 1. ЗАГОЛОВОК (Title):
-*   **Содержание:** краткое, высокоуровневое описание сути изменений.
-*   **Формат:** `<описание>` (область опциональна).
-*   **Глагол:** формулировка в повелительном наклонении (императив).
-*   **Длина:** не более 50 символов.
-*   **Регистр:** начинается с заглавной буквы.
-*   **Точка в конце:** не ставится.
-
-# 2. ДЕТАЛЬНОЕ ОПИСАНИЕ (Body):
-*   **Назначение:** объясняет «что» и «почему», а не «как».
-*   Следует после заголовка через одну пустую строку.
-*   Может содержать несколько параграфов или маркеры `<тип>(<область>): <описание>` в прошедшем времени.
-
-# ТИПЫ КОММИТОВ:
-*   `feat`, `fix`, `docs`, `style`, `refactor`, `perf`, `test`, `build`, `ci`, `chore`.
-
-# ФОРМАТ ОТВЕТА:
-<Заголовок>
-
-<Детальное описание (если применимо)>
-"""
-
-MODEL_NAME = os.getenv("GEMINI_MODEL", "gemini-2.5-flash-preview-04-17")
-API_KEY_ENV = "GOOGLE_API_KEY"
-
-
-def get_api_key() -> str:
-    """
-    Получает ключ API из переменной окружения.
-
-    :raises SystemExit: если переменная не установлена.
-    :return: строка с API-ключом.
-    """
-    key = os.getenv(API_KEY_ENV)
-    if not key:
-        print(f"Ошибка: переменная окружения {API_KEY_ENV} не установлена.", file=sys.stderr)
-        sys.exit(1)
-    return key
-
-
-def get_git_diff() -> str:
-    """
-    Извлекает разницу (diff) из индексированных изменений Git.
-
-    :return: текст diff.
-    """
-    result = subprocess.run(
-        [
-            'git',
-            '--no-pager',
-            '-c',
-            'delta.enable=false',
-            'diff',
-            '--cached',
-            '--text',
-        ],
-        stdout=subprocess.PIPE,
-        text=True
-    )
-    return result.stdout
-
-
-def send_request(api_key: str, prompt: str) -> Optional[Dict[str, Any]]:
-    """
-    Отправляет запрос к Gemini Free API и возвращает ответ.
-
-    :param api_key: API-ключ для доступа к сервису.
-    :param prompt: текстовый промпт для модели.
-    :return: словарь с ответом или None при ошибке.
-    """
-    url = (
-        f"https://generativelanguage.googleapis.com/v1beta/models/"
-        f"{MODEL_NAME}:generateContent?key={api_key}"
-    )
-    payload = {"contents": [{"parts": [{"text": prompt}]}]}
-    headers = {"Content-Type": "application/json; charset=utf-8"}
-    data = json.dumps(payload).encode("utf-8")
-    req = urllib.request.Request(url, data=data, headers=headers, method="POST")
-    try:
-        with urllib.request.urlopen(req) as resp:
-            return json.loads(resp.read().decode("utf-8"))
-    except urllib.error.HTTPError as err:
-        print(f"Ошибка HTTP: {err.code} {err.reason}", file=sys.stderr)
-        print(err.read().decode("utf-8"), file=sys.stderr)
-    except urllib.error.URLError as err:
-        print(f"Ошибка URL: {err.reason}", file=sys.stderr)
-    return None
-
-
-def extract_answer(response: Dict[str, Any]) -> str:
-    """
-    Извлекает текстовое содержание ответа модели из структуры API.
-
-    :param response: словарь с данными ответа API.
-    :return: текст ответа.
-    """
-    candidates = response.get("candidates")
-    if candidates:
-        parts = candidates[0].get("content", {}).get("parts", [])
-        return "".join(p.get("text", "") for p in parts).strip()
-    return ""
-
-
-def format_commit_message(message: str) -> str:
-    """
-    Форматирует сгенерированное сообщение коммита.
-
-    :param message: сырой текст от модели.
-    :return: отформатированное сообщение.
-    """
-    lines = message.strip().split("\n")
-    title = lines[0]
-    body = "\n".join(lines[1:]).strip()
-    return f"{title}\n\n{body}" if body else title
-
-
-def main() -> None:
-    """
-    Основная функция: извлекает diff, запрашивает модель и выводит сообщение.
-    """
-    parser = argparse.ArgumentParser(description='Генератор сообщений коммитов с Gemini API')
-    parser.add_argument(
-        '--model',
-        help='Имя модели Gemini (по умолчанию из GEMINI_MODEL)',
-    )
-    args = parser.parse_args()
-
-    if args.model:
-        global MODEL_NAME
-        MODEL_NAME = args.model
-
-    api_key = get_api_key()
-    diff = get_git_diff()
-    if not diff.strip():
-        print('Нет изменений для коммита.')
-        sys.exit(0)
-
-    prompt = COMMIT_MESSAGE_PROMPT.format(diff=diff)
-    response = send_request(api_key, prompt)
-    if not response:
-        print('Ошибка получения ответа от Gemini API.', file=sys.stderr)
-        sys.exit(1)
-
-    answer = extract_answer(response)
-    if not answer:
-        print('Пустой ответ от модели.', file=sys.stderr)
-        sys.exit(1)
-
-    commit_msg = format_commit_message(answer)
-    print(commit_msg)
-
-
-if __name__ == '__main__':
-    main()
diff --git a/home-manager/configs/nvim/lua/plugins/ai/docscribe.lua b/home-manager/configs/nvim/lua/plugins/ai/docscribe.lua
index 4036d5d..2477b66 100644
--- a/home-manager/configs/nvim/lua/plugins/ai/docscribe.lua
+++ b/home-manager/configs/nvim/lua/plugins/ai/docscribe.lua
@@ -5,7 +5,7 @@ return {
     require('docscribe').setup {
       llm = {
         provider = 'ollama',
-        model = 'qwen3:4b',
+        model = 'slimsag/starchat2:15b-v0.1-f16-q4_0',
       },
     }
   end,
diff --git a/home-manager/modules/default.nix b/home-manager/modules/default.nix
index 65f16be..cececac 100644
--- a/home-manager/modules/default.nix
+++ b/home-manager/modules/default.nix
@@ -13,5 +13,8 @@
     ./tmux.nix
     ./fastfetch.nix
     ./otd.nix
+    ./zsh.nix
+    ./misc.nix
+    ./kanata.nix
   ];
 }
diff --git a/home-manager/modules/ghostty.nix b/home-manager/modules/ghostty.nix
index b76b015..a8b097e 100644
--- a/home-manager/modules/ghostty.nix
+++ b/home-manager/modules/ghostty.nix
@@ -8,6 +8,7 @@
       minimum-contrast = 1.1;
       font-size = 12;
       bold-is-bright = true;
+      command = "/etc/profiles/per-user/tronin.egor/bin/nu";
 
       macos-titlebar-style = "tabs";
       background-blur-radius = 20;
diff --git a/home-manager/modules/kanata.nix b/home-manager/modules/kanata.nix
new file mode 100644
index 0000000..1dab74b
--- /dev/null
+++ b/home-manager/modules/kanata.nix
@@ -0,0 +1,46 @@
+{ pkgs, ... }: {
+  home.packages = with pkgs; [ kanata ];
+  xdg.configFile."kanata/kanata.kbd".text = ''
+    (defcfg
+      process-unmapped-keys yes
+    )
+    (defsrc
+      ⎋    f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
+      caps a    s    d    f    g    h    j    k    l
+    )
+
+    (defvar
+      tap-timeout 100
+      hold-timeout 200
+
+      tt $tap-timeout
+      ht $hold-timeout
+    )
+
+    (deftemplate triple-tap-layer-switch (key layer-name)
+      $key (tap-dance 200 (
+        $key
+        (macro $key $key)
+        (layer-switch $layer-name)
+      ))
+    )
+
+    (deflayermap (default)
+      s (tap-hold-release $tt $ht s lmet)
+      f (tap-hold-release $tt $ht f rctl)
+
+      spc (tap-hold $tt $ht spc (layer-while-held extended))
+    )
+
+    (deflayermap (extended)
+      k up
+      h left
+      j down
+      l rght
+    )
+    (deflayer base
+      ⎋    f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
+      f13 a    s    d    f    g    h    j    k    l
+    )
+  '';
+}
diff --git a/home-manager/modules/misc.nix b/home-manager/modules/misc.nix
new file mode 100644
index 0000000..9cbbab5
--- /dev/null
+++ b/home-manager/modules/misc.nix
@@ -0,0 +1,7 @@
+{
+  programs = {
+    eza.enable = true;
+    zoxide.enable = true;
+    atuin.enable = true;
+  };
+}
diff --git a/home-manager/modules/nushell.nix b/home-manager/modules/nushell.nix
index 67eb523..fb122c6 100644
--- a/home-manager/modules/nushell.nix
+++ b/home-manager/modules/nushell.nix
@@ -1,18 +1,24 @@
-{ pkgs, ... }: {
-  home.packages = with pkgs; [ zoxide ];
-
+{ pkgs, user, lib, ... }: {
   programs.nushell = {
     enable = true;
-    package = pkgs.nushell;
 
     environmentVariables = {
       EDITOR = "nvim";
       VISUAL = "nvim";
+      PATH =
+        "/Users/${user}/.nix-profile/bin:/etc/profiles/per-user/${user}/bin:/run/current-system/sw/bin:/nix/var/nix/profiles/default/bin:/usr/local/bin:/opt/homebrew/bin:/Users/${user}/.local/bin:/Users/${user}/.cargo/bin:/Users/${user}/.lmstudio/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin";
+      ENV_CONVERSIONS = {
+        PATH = {
+          from_string =
+            lib.hm.nushell.mkNushellInline "{|s| $s | split row (char esep) }";
+          to_string =
+            lib.hm.nushell.mkNushellInline "{|v| $v | str join (char esep) }";
+        };
+      };
     };
 
     shellAliases = {
       v = "nvim";
-      ssh = ''env TERM="xterm-256color" ssh'';
       cat = "bat --style=plain";
       ".." = "cd ..";
       l = "ls";
@@ -66,7 +72,7 @@
       gta = "git tag -a";
 
       # Nix
-      hms = "nix run nix-darwin -- switch --flake '.#hikary' --impure -v";
+      hms = "darwin-rebuild switch --flake '.#hikary' --impure -v";
       hmc = "nix-collect-garbage -d";
     };
 
diff --git a/home-manager/modules/starship.nix b/home-manager/modules/starship.nix
index fe75c2e..00c04d7 100644
--- a/home-manager/modules/starship.nix
+++ b/home-manager/modules/starship.nix
@@ -4,7 +4,6 @@
   };
   programs.starship = {
     enable = true;
-    enableFishIntegration = true;
     enableZshIntegration = true;
     settings = {
       format =
diff --git a/home-manager/modules/zsh.nix b/home-manager/modules/zsh.nix
new file mode 100644
index 0000000..3a36414
--- /dev/null
+++ b/home-manager/modules/zsh.nix
@@ -0,0 +1,90 @@
+{
+  programs.zsh = {
+    enable = false;
+    autocd = true;
+    autosuggestion = { enable = true; };
+    history = {
+      ignoreDups = true;
+      ignoreAllDups = true;
+      ignoreSpace = true;
+      save = 1000000;
+      size = 1000000;
+    };
+
+    shellAliases = {
+      src = "source ~/.zshrc";
+      v = "nvim";
+      home = "cd ~";
+      lss = "yazi";
+      vs = "source .venv/bin/activate";
+      l = "eza --color=always --icons --group-directories-first";
+      la = "eza -a --color=always --icons --group-directories-first";
+      ll = "eza -l --color=always --icons --group-directories-first";
+      rm = "rm_confirm";
+      create_mr = "${../../scripts/ai_helper} --mode mr --api gemini";
+      dots = "chezmoi";
+      fdev = "cd $HOME/Documents/dev";
+      cd = "z";
+      net = "gping www.google.com -c '#88C0D0,#B48EAD,#81A1C1,#8FBCBB'";
+      tree = "tre";
+      fzf = "fzf --color=16 --border=rounded --margin=1,3 --preview='bat {}'";
+      zf =
+        "nvim $(fzf --color=16 --border=rounded --margin=1,3 --preview='bat {}')";
+      "." = "cd ..";
+      ".." = "cd ../..";
+      "..." = "cd ../../..";
+
+      hms = "nix run nix-darwin -- switch --flake '.#hikary' --impure -v";
+      hmc = "nix-collect-garbage -d";
+
+      lg = "lazygit";
+      gs = "git status";
+      ga = "git add";
+      gaa = "git add --all";
+      gc = "git commit -m";
+      gp = "git push";
+      gpl = "git pull";
+      gf = "git fetch --all";
+      gb = "git branch";
+      gco = "git checkout";
+      gcb = "git checkout -b";
+      gd = "git diff";
+      gl = "git log --oneline";
+      grs = "git restore --staged";
+      grh = "git reset --hard";
+      gst = "git stash";
+      gstp = "git stash pop";
+      gm = "git merge";
+      grb = "git rebase";
+      gcp = "git cherry-pick";
+      gtl = "git tag -l";
+      gta = "git tag -a";
+    };
+
+    enableCompletion = true;
+
+    antidote = {
+      enable = true;
+      plugins = [
+        "zdharma-continuum/fast-syntax-highlighting kind:defer"
+        "zsh-users/zsh-history-substring-search"
+      ];
+    };
+
+    initContent = ''
+      rm_confirm() {
+          local confirm
+
+              # If not, proceed with the standard confirmation
+              echo -n "Are you sure you wanna run 'rm -rf'? (yes/no): "
+              read confirm
+              if [ "$confirm" = "yes" ]; then
+                  command rm  "$@"
+              else
+                  echo "Operation canceled."
+              fi
+
+      }
+    '';
+  };
+}
diff --git a/home-manager/packages.nix b/home-manager/packages.nix
index ecafaa5..4a755ed 100644
--- a/home-manager/packages.nix
+++ b/home-manager/packages.nix
@@ -7,6 +7,11 @@
     less
     rsync
     p7zip
+    asdf
+    gping
+    atuin
+    eza
+    rclone
     lrzip
     unrar
     unzip
diff --git a/scripts/ai_helper b/scripts/ai_helper
index 78a846b..670157a 100755
--- a/scripts/ai_helper
+++ b/scripts/ai_helper
@@ -8,7 +8,7 @@ ai_helper_ollama.py – универсальный CLI‑помощник для
   • **refactor**  – исправление текста из буфера обмена
 
 Перед использованием убедитесь, что Ollama запущена (`ollama serve`) и
-загружена нужная модель (по умолчанию `OLLAMA_MODEL`, например `qwen3:4b`).
+загружена нужная модель (по умолчанию `OLLAMA_MODEL`, например `qwen3:8b`).
 
 Запуск:
     python ai_helper_ollama.py --mode mr
@@ -144,7 +144,7 @@ def set_clipboard_text(text: str) -> None:
 def send_request(
     prompt: str, model: Optional[str] = None, host: Optional[str] = None
 ) -> Optional[str]:
-    model = model or os.getenv('OLLAMA_MODEL', 'qwen3:4b')
+    model = model or os.getenv('OLLAMA_MODEL', 'qwen3:8b')
     host = host or os.getenv('OLLAMA_HOST', 'http://localhost:11434')
     url = f'{host.rstrip("/")}/api/chat'
 
@@ -160,6 +160,7 @@ def send_request(
     try:
         with urllib.request.urlopen(req) as resp:
             resp_json = json.loads(resp.read().decode('utf-8'))
+            print(resp_json)
             return resp_json.get('message', {}).get('content', '').strip()
     except urllib.error.HTTPError as err:
         notify(
